// Generated by CoffeeScript 1.7.1

/*
 *LoaderService#
Сервис для отображения процесса загрузки.  
Подходит и для отображения процесса запроса.
 */
'use strict';
MainModule.service('Loader', function($rootScope) {
  var Loader;
  Loader = (function() {
    function Loader() {}

    Loader.prototype.ID = null;

    Loader.prototype.loaderContainer = $('<div class="loader"></div>');

    Loader.prototype.loaderProgress = $('<div class="loader-progress"></div>');

    Loader.prototype.startLoad = function() {
      this.ID = Math.round(Math.random() * 1000);
      if (!$rootScope.loaders) {
        $rootScope.loaders = {};
      }
      $rootScope.loaders[this.ID] = true;
      if ($rootScope.loaders[this.ID]) {
        return $('body').append(this.loaderContainer.append(this.loaderProgress.css('width', 0)));
      }
    };

    Loader.prototype.process = function(increment) {
      return this.loaderProgress.width(increment * this.loaderProgress.offsetParent().width() / 100);
    };

    Loader.prototype.stopLoad = function() {
      delete $rootScope.loaders[this.ID];
      this.loaderProgress.css('width', '100%');
      return setTimeout((function(_this) {
        return function() {
          _this.loaderProgress.css('opacity', 0);
          return setTimeout(function() {
            _this.loaderContainer.remove();
            return _this.loaderProgress.css('opacity', 1);
          }, 350);
        };
      })(this), 350);
    };

    Loader.prototype.renderBand = function(array) {
      var maxCount, temp;
      console.log(array[0]);
      if (angular.isDefined(array[0].counters)) {
        maxCount = array[0].counters.friends;
        temp = [];
        angular.forEach(array, function(user, index) {
          if (index < 99) {
            user.width = user.counters.friends / maxCount * 100;
            user.width = user.width + '%';
            return temp.push(user);
          }
        });
        return temp;
      } else {
        maxCount = array[0].count;
        temp = [];
        angular.forEach(array, function(user, index) {
          if (index < 99) {
            user.width = user.count / maxCount * 100;
            user.width = user.width + '%';
            return temp.push(user);
          }
        });
        return temp;
      }
    };

    return Loader;

  })();
  return new Loader();
});

//# sourceMappingURL=LoaderService.map
